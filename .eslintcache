[{"/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/haiku-twitter/haiku-twitter-frontend/src/Components/Signup.js":"1","/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/haiku-twitter/haiku-twitter-frontend/src/App.js":"2","/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/haiku-twitter/haiku-twitter-frontend/src/Components/Login.js":"3"},{"size":4205,"mtime":1606454217719,"results":"4","hashOfConfig":"5"},{"size":2086,"mtime":1606454106020,"results":"6","hashOfConfig":"5"},{"size":2974,"mtime":1606453904892,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"uctfj3",{"filePath":"10","messages":"11","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"12","messages":"13","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},"/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/haiku-twitter/haiku-twitter-frontend/src/Components/Signup.js",["15"],"/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/haiku-twitter/haiku-twitter-frontend/src/App.js",["16"],"/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/haiku-twitter/haiku-twitter-frontend/src/Components/Login.js",["17"],"import React, { useRef, useState } from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport styled from 'styled-components';\nimport { MdClose } from 'react-icons/md';\n\nconst Background = styled.div`\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.8);\n  position: fixed;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst ModalWrapper = styled.div`\n  width: 800px;\n  height: 500px;\n  box-shadow: 0 5px 16px rgba(0, 0, 0, 0.2);\n  background: #fff;\n  color: #000;\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  position: relative;\n  z-index: 10;\n  border-radius: 10px;\n`;\n\nconst CloseModalButton = styled(MdClose)`\n  cursor: pointer;\n  position: absolute;\n  top: 20px;\n  right: 20px;\n  width: 32px;\n  height: 32px;\n  padding: 0;\n  z-index: 10;\n`;\n\n\nexport const Login = (props) => {\n  const initialState = {\n    username: \"\",\n    password: \"\",\n  };\n\n  let [{ username, password }, setState] = useState(initialState)\n  \n  const clearState = () => setState({ ...initialState })\n\n  const handleChange = (event) => {\n        const { name, value } = event.target\n        setState((prevState => ({ ...prevState, [name]: value })));\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    let user = {\n      username: username,\n      password: password,\n    };\n    props.handleLogin(user)\n    redirect()\n  };\n\n  const redirect = () => {\n    props.history.push(\"/\");\n  };\n\n\n  const modalRef = useRef();\n\n  const animation = useSpring({\n    config: {\n      duration: 250,\n    },\n    opacity: props.showLogin ? 1 : 0,\n    transform: props.showLogin ? `translateY(0%)` : `translateY(-100%)`,\n  });\n\n  const closeModal = (e) => {\n    if (modalRef.current === e.target) {\n      props.openLogin();\n    }\n  };\n\n  return (\n    <>\n      {props.showLogin ? (\n        <Background onClick={closeModal} ref={modalRef}>\n          <animated.div style={animation}>\n            <ModalWrapper showLogin={props.showLogin}>\n              <div>\n                <h1>Log In</h1>\n                <form onSubmit={handleSubmit}>\n                  <input\n                    placeholder=\"username\"\n                    type=\"text\"\n                    name=\"username\"\n                    value={username}\n                    onChange={handleChange}\n                  />\n                  <input\n                    placeholder=\"password\"\n                    type=\"password\"\n                    name=\"password\"\n                    value={password}\n                    onChange={handleChange}\n                  />\n                  <button placeholder=\"submit\" type=\"submit\">\n                    Log In\n                  </button>\n        \n                </form>\n                  </div>\n              <CloseModalButton\n                aria-label='Close modal'\n                onClick={() => props.openLogin()}\n              />\n            </ModalWrapper>\n          </animated.div>\n        </Background>\n      )  : null }\n    </>\n  );\n}\n",{"ruleId":"18","severity":1,"message":"19","line":53,"column":11,"nodeType":"20","messageId":"21","endLine":53,"endColumn":21},{"ruleId":"18","severity":1,"message":"22","line":2,"column":18,"nodeType":"20","messageId":"21","endLine":2,"endColumn":23},{"ruleId":"18","severity":1,"message":"19","line":49,"column":9,"nodeType":"20","messageId":"21","endLine":49,"endColumn":19},"no-unused-vars","'clearState' is assigned a value but never used.","Identifier","unusedVar","'Route' is defined but never used."]
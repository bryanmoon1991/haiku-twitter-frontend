[{"/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/haiku-twitter/haiku-twitter-frontend/src/index.js":"1","/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/haiku-twitter/haiku-twitter-frontend/src/Components/Compose.js":"2","/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/haiku-twitter/haiku-twitter-frontend/src/Components/ProfileCard.js":"3","/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/haiku-twitter/haiku-twitter-frontend/src/App.js":"4","/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/haiku-twitter/haiku-twitter-frontend/src/Components/EditProfile.js":"5","/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/haiku-twitter/haiku-twitter-frontend/src/Components/HaikuCard.js":"6","/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/haiku-twitter/haiku-twitter-frontend/src/Components/Home.js":"7","/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/haiku-twitter/haiku-twitter-frontend/src/Components/ProfileContainer.js":"8"},{"size":240,"mtime":1606774365070,"results":"9","hashOfConfig":"10"},{"size":3759,"mtime":1606854408520,"results":"11","hashOfConfig":"10"},{"size":2390,"mtime":1606954483227,"results":"12","hashOfConfig":"10"},{"size":12517,"mtime":1607010543996,"results":"13","hashOfConfig":"10"},{"size":4083,"mtime":1606954483222,"results":"14","hashOfConfig":"10"},{"size":2540,"mtime":1607009958748,"results":"15","hashOfConfig":"10"},{"size":2628,"mtime":1607010125806,"results":"16","hashOfConfig":"10"},{"size":4403,"mtime":1606854408532,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"uctfj3",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/haiku-twitter/haiku-twitter-frontend/src/index.js",[],"/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/haiku-twitter/haiku-twitter-frontend/src/Components/Compose.js",[],["36","37"],"/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/haiku-twitter/haiku-twitter-frontend/src/Components/ProfileCard.js",[],"/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/haiku-twitter/haiku-twitter-frontend/src/App.js",["38"],"import React, { Component } from 'react';\nimport { Route, Switch, withRouter } from 'react-router-dom';\nimport { NavBar } from './Components/NavBar'\nimport { Welcome } from './Components/Welcome'\nimport { Signup } from './Components/Signup';\nimport { Login } from './Components/Login';\nimport { Compose } from './Components/Compose';\nimport { EditProfile } from './Components/EditProfile';\nimport Home from './Components/Home';\nimport { ProfileContainer } from './Components/ProfileContainer';\nimport { Explore } from './Components/Explore';\nimport { FaHSquare } from \"react-icons/fa\";\nimport { CgTwitter } from \"react-icons/cg\";\nimport './App.css'\n\n\nclass App extends Component {\n  state = {\n    user: null,\n    userIndex: [],\n    feed: [],\n    profile: null,\n    profilesFavorites: [],\n    showLogin: false,\n    showSignup: false,\n    showCompose: false,\n    showEditProfile: false,\n    favoriteInstances: [],\n  };\n\n  toggleLogin = () => {\n    this.setState({ showLogin: !this.state.showLogin });\n  };\n\n  toggleSignup = () => {\n    this.setState({ showSignup: !this.state.showSignup });\n  };\n\n  toggleCompose = () => {\n    this.setState({ showCompose: !this.state.showCompose });\n  };\n\n  toggleEditProfile = () => {\n    this.setState({ showEditProfile: !this.state.showEditProfile });\n  };\n\n  componentDidMount() {\n    const token = localStorage.getItem('token');\n    if (token) {\n      fetch('http://localhost:4000/api/v1/profile', {\n        method: 'GET',\n        headers: { authorization: `Bearer ${token}` },\n      })\n        .then((r) => r.json())\n        .then((data) => {\n          // debugger\n          this.setState(\n            {\n              user: data.user,\n              feed: data.feed,\n              userIndex: data.unfollowedUsers,\n            },\n            () => {\n              console.log('CDM:', this.state);\n            }\n          );\n        });\n    } else {\n      Promise.all([\n        fetch('http://localhost:4000/api/v1/users'),\n        fetch('http://localhost:4000/api/v1/haikus'),\n      ])\n        .then(([res1, res2]) => Promise.all([res1.json(), res2.json()]))\n        .then(([data1, data2]) =>\n          this.setState(\n            {\n              userIndex: data1,\n              feed: data2,\n            },\n            () => {\n              console.log('no user logged in');\n              console.log('non-user CDM:', this.state);\n            }\n          )\n        );\n    }\n  }\n\n  handleSignup = (user) => {\n    fetch('http://localhost:4000/api/v1/users', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n      },\n      body: JSON.stringify({ user: user }),\n    })\n      .then((r) => r.json())\n      .then((data) => {\n        if (data.error){\n          alert(data.error)\n        }else{\n          this.setState({ user: data.user });\n          localStorage.setItem('token', data.jwt);\n          this.props.history.push('/explore');\n        }\n      })\n  };\n\n  handleLogin = (userInfo) => {\n    fetch('http://localhost:4000/api/v1/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n      },\n      body: JSON.stringify({ user: userInfo }),\n    })\n      .then((r) => r.json())\n      .then((data) => {\n        if (data.message){\n          alert(data.message)\n          this.setState({\n            feed: data.feed,\n            userIndex: data.userIndex,\n          });\n         \n        }else{\n\n          this.setState({\n            user: data.user,\n            feed: data.feed,\n            userIndex: data.unfollowedUsers,\n          });\n         \n          localStorage.setItem('token', data.jwt);\n          this.props.history.push('/home');\n        }\n      });\n  };\n\n  createHaiku = (haiku) => {\n    fetch('http://localhost:4000/api/v1/haikus', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n      },\n      body: JSON.stringify({\n        user_id: this.state.user.id,\n        first: haiku.first,\n        second: haiku.second,\n        third: haiku.third,\n      }),\n    })\n      .then((r) => r.json())\n      .then((data) => {\n        console.log(data);\n        this.getProfile(this.state.user.id)\n        this.props.history.push(`/users/${this.state.user.id}`);\n      });\n  };\n\n  handleLogout = () => {\n    console.log('logged out');\n    localStorage.removeItem('token');\n    this.setState({ user: null, feed: [] });\n    Promise.all([\n      fetch('http://localhost:4000/api/v1/users'),\n      fetch('http://localhost:4000/api/v1/haikus'),\n    ])\n      .then(([res1, res2]) => Promise.all([res1.json(), res2.json()]))\n      .then(([data1, data2]) =>\n        this.setState(\n          {\n            userIndex: data1,\n            feed: data2,\n          },\n          () => {\n            console.log('no user logged in');\n            console.log('non-user AFTER LOGOUT:', this.state);\n            this.props.history.push('/explore');\n          }\n        )\n      );\n  };\n\n  getProfile = (id) => {\n    this.setState({ profile: null, profilesFavorites: [] });\n\n    fetch(`http://localhost:4000/api/v1/users/${id}`)\n      .then((response) => response.json())\n      .then((data) => {\n        console.log('in get profile:', data);\n        this.setState({\n          profile: data.user,\n          profilesFavorites: data.favorites\n        });\n      });\n  };\n\n  editProfile = (user) => {\n    const token = localStorage.getItem('token');\n    fetch(`http://localhost:4000/api/v1/users/${this.state.user.id}`,{\n            method: \"PATCH\",\n            headers: {\n                authorization: `Bearer ${token}`,\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\"\n            },\n            body: JSON.stringify(user)\n        })\n        .then(r => r.json())\n        .then(user => {\n          console.log(user)\n          this.setState({user: user})\n          this.getProfile(user.id)\n          this.props.history.push(`/users/${user.id}`)\n\n        })\n  }\n\n  handleDeleteHaiku = (haiku) => {\n    fetch(`http://localhost:4000/api/v1/haikus/${haiku.id}`,{\n      method: 'DELETE'\n    }).then(resp => resp.json()).then(() => {\n      const userCopy = this.state.user\n      const index = userCopy.haikus.indexOf(haiku)\n      userCopy.haikus.splice(index, 1)\n      this.setState({user: userCopy}, () => {\n        this.getProfile(this.state.user.id)\n        this.props.history.push(`/users/${this.state.user.id}`)\n      })\n    })\n  }\n\n  addFavorite = (haikuID) => {\n    fetch(\"http://localhost:4000/api/v1/favorites\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accepts': 'application/json'\n      },\n      body: JSON.stringify({\n        haiku_id: haikuID,\n        user_id: this.state.user.id\n      })\n    }).then(resp => resp.json()).then((data) => {\n      let userCopy = this.state.user\n      userCopy.favorites.push(data)\n      this.setState({user: userCopy})\n    })\n  }\n\n  removeFavorite = (haikuID) => {\n    let fav = this.state.user.favorites.find(favObj => favObj.haiku.id === haikuID)\n    fetch(`http://localhost:4000/api/v1/favorites/${fav.id}`, {\n      method: 'DELETE'\n    }).then(resp => resp.json()).then((data) => {\n      let userCopy = this.state.user \n      let deletedFav = userCopy.favorites.indexOf(fav)\n      userCopy.favorites.splice(deletedFav, 1)\n      this.setState({user: userCopy})\n    })\n  }\n\n  follow = (userID) => {\n  \n      fetch(\"http://localhost:4000/api/v1/relationships\", {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accepts': 'application/json'\n        },\n        body: JSON.stringify({\n          follower_id: this.state.user.id,\n          followee_id: userID\n        })\n      }).then(resp => resp.json()).then((data) => {\n        let userCopy = this.state.user\n        let newFollowee = this.state.userIndex.find(userObj => userObj.id === userID)\n        userCopy.followees.push(newFollowee)\n        userCopy.followed_users.push(data)\n        this.setState({user: userCopy}, () => {\n          console.log(\"follow:\", this.state.user.followed_users, this.state.user.followees)\n        })\n      })\n  }\n\n  unfollow = (userID) => {\n    let relationship = this.state.user.followed_users.find(rel => rel.followee_id === userID)\n    fetch(`http://localhost:4000/api/v1/relationships/${relationship.id}`, {\n      method: 'DELETE'\n    }).then(resp => resp.json()).then((data) => {\n      let userCopy = this.state.user \n      let indexOfRelationship = userCopy.followed_users.indexOf(relationship)\n      userCopy.followed_users.splice(indexOfRelationship, 1)\n      let unfollowedUser = userCopy.followees.find(userObj => userObj.id === userID)\n      let indexOfUser = userCopy.followees.indexOf(unfollowedUser)\n      userCopy.followees.splice(indexOfUser, 1)\n\n      if (this.state.userIndex.includes(unfollowedUser)) {\n        console.log(\"already in index of non-followed\") \n        \n        this.setState({user: userCopy}, () => {\n          console.log(\n            'unfollow:',\n            this.state.user.followed_users,\n            this.state.user.followees,\n            data\n          );\n        })\n  \n      } else {\n        this.setState({\n          user: userCopy,\n          userIndex:[...this.state.userIndex, unfollowedUser]\n        }, () => {\n          console.log(\n            'unfollow:',\n            this.state.user.followed_users,\n            this.state.user.followees,\n            data\n          );\n        })\n      } \n    })\n  }\n\n\n  feedSort = () => {\n    return this.state.feed.sort((a,b) => {\n      if (a.created_at > b.created_at) return -1;\n      if (a.created_at < b.created_at) return 1;\n      return 0;\n    })\n  }\n\n\n  render() {\n    return (\n      <div className=\"main\">\n        <span className='logo'>\n          <FaHSquare className=\"logo-icons\" />\n          <CgTwitter className=\"logo-icons\" />\n        </span>\n        <NavBar\n          currentUser={this.state.user}\n          getProfile={this.getProfile}\n          toggleCompose={this.toggleCompose}\n        />\n\n        <Route\n          path=\"/explore\"\n          render={() => (\n            <Explore\n              currentUser={this.state.user}\n              userIndex={this.state.userIndex}\n              getProfile={this.getProfile}\n              follow={this.follow}\n              unfollow={this.unfollow}\n            />\n          )}\n        />\n\n      \n          <Route\n            path=\"/home\"\n            render={() => (\n              <Home\n                currentUser={this.state.user}\n                feed={this.feedSort()}\n                getProfile={this.getProfile}\n                addFavorite={this.addFavorite}\n                removeFavorite={this.removeFavorite}\n              />\n            )}\n          />\n          <Route\n            path=\"/users\"\n            render={() => (\n              <ProfileContainer\n                userIndex={this.state.userIndex}\n                profile={this.state.profile}\n                profilesFavorites={this.state.profilesFavorites}\n                getProfile={this.getProfile}\n                currentUser={this.state.user}\n                follow={this.follow}\n                unfollow={this.unfollow}\n                addFavorite={this.addFavorite}\n                removeFavorite={this.removeFavorite}\n                handleDeleteHaiku={this.handleDeleteHaiku}\n              />\n            )}\n          />\n        \n\n        <Welcome\n          currentUser={this.state.user}\n          toggleLogin={this.toggleLogin}\n          toggleSignup={this.toggleSignup}\n          handleLogout={this.handleLogout}\n          toggleEditProfile={this.toggleEditProfile}\n        />\n\n        {/* Modals */}\n        <Signup\n          showSignup={this.state.showSignup}\n          toggleSignup={this.toggleSignup}\n          handleSignup={this.handleSignup}\n        />\n        <Login\n          showLogin={this.state.showLogin}\n          toggleLogin={this.toggleLogin}\n          handleLogin={this.handleLogin}\n        />\n        <Compose\n          toggleCompose={this.toggleCompose}\n          showCompose={this.state.showCompose}\n          createHaiku={this.createHaiku}\n        />\n        {this.state.user ?\n        <EditProfile\n          toggleEditProfile={this.toggleEditProfile}\n          showEditProfile={this.state.showEditProfile}\n          editProfile={this.editProfile}\n          currentUser={this.state.user}\n        /> :\n        null\n        }\n      </div>\n    );\n  }\n}\n\n\n\nexport default withRouter(App);","/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/haiku-twitter/haiku-twitter-frontend/src/Components/EditProfile.js",[],"/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/haiku-twitter/haiku-twitter-frontend/src/Components/HaikuCard.js",[],"/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/haiku-twitter/haiku-twitter-frontend/src/Components/Home.js",[],"/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/haiku-twitter/haiku-twitter-frontend/src/Components/ProfileContainer.js",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":2,"column":17,"nodeType":"45","messageId":"46","endLine":2,"endColumn":23},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]